plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}

android {
    defaultConfig {
        applicationId "com.secuso.privacyFriendlyCodeScanner"
        minSdkVersion 17
        compileSdk 34
        targetSdkVersion 34
        multiDexEnabled true
        versionCode 64
        versionName "4.6.16"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildFeatures.dataBinding = true
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def appName = "pfa-qr-scanner"
            outputFileName = appName + "-${variant.name}-v${variant.versionName}.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    kotlin {
        jvmToolchain(17)
    }

    namespace 'com.secuso.privacyfriendlycodescanner.qrscanner'
    lint {
        lintConfig = file("lint.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1' // latest version still supporting API 17; 1.7.0 requires API 21
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.android.material:material:1.11.0' // latest version still supporting API 17; 1.12.0 requires API 19
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4' // latest version still supporting API 17; 2.2.0 requires API 21
    implementation 'androidx.cardview:cardview:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5' // latest version still supporting API 17; 1.2.0 requires API 19
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1' // latest version still supporting API 17; 3.6.0 requires API 19

    implementation('com.journeyapps:zxing-android-embedded:4.3.0') { transitive = false }
    implementation 'com.google.zxing:core:3.5.3'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation "androidx.multidex:multidex:2.0.1"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    ksp 'com.github.bumptech.glide:compiler:4.9.0'

    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    implementation 'com.google.code.gson:gson:2.9.1' //Versions newer than 2.9 only work on API levels > 21 (https://github.com/google/gson/issues/2310). App crashes e.g. when saving a generated QR code to history on API 17.
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.core:core-ktx:1.12.0" // latest version still supporting API 17; 1.13.0 requires API 19
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2" //2.7.0+ not compatible with API < 19
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(path: ':backup-api')
    def work_version = "2.9.1" // latest version still supporting API 17; 2.10.0 requires API 21
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
}

tasks.withType(Test).configureEach {
    testLogging {
        events "passed", "skipped", "failed", "standard_out"
        exceptionFormat "full"
        afterSuite { desc, result ->
            if (!desc.parent) {
                println("\nResult: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)\n")
            }
        }
    }
}

repositories {
    mavenCentral()
}
